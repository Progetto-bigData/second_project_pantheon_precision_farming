version: '3'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1, humidity-sensor:1:1, pressure-sensor:1:1, rain-sensor:1:1, solar-sensor:1:1, soil-temperature-sensor:1:1, soil-water-sensor:1:1, temperature-sensor:1:1, wind-sensor:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      

  dummy-producer:
    build: 
      context: ./iot-sensor-producer
      dockerfile: dummy-producer.df
    container_name: dummy-producer
    depends_on:
      - "kafka"
 
 
  humidity-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/humidity-producer.df
    container_name: humidity-producer
    depends_on:
      - "kafka"
 
 
  pressure-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/pressure-producer.df
    container_name: pressure-producer
    depends_on:
      - "kafka"
   
   
  rain-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/rain-producer.df
    container_name: rain-producer
    depends_on:
      - "kafka"
  
  
  solar-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/solar-producer.df
    container_name: solar-producer
    depends_on:
      - "kafka"
  
  
  soil-temperature-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/soil-temperature-producer.df
    container_name: soil-temperature-producer
    depends_on:
      - "kafka"
  
  
  soil-water-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/soil-water-producer.df
    container_name: soil-water-producer
    depends_on:
      - "kafka"
  
  
  wind-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/wind-producer.df
    container_name: wind-producer
    depends_on:
      - "kafka"
      
  spark-master:
    image: bde2020/spark-master:2.4.1-hadoop2.7
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark


  spark-worker-1:
    image: bde2020/spark-worker:2.4.1-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

