version: '3'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1, humidity-sensor:1:1, pressure-sensor:1:1, rain-sensor:1:1, solar-sensor:1:1, soil-temperature-sensor:1:1, soil-water-sensor:1:1, temperature-sensor:1:1, wind-sensor:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      

  dummy-producer:
    build: 
      context: ./iot-sensor-producer
      dockerfile: dummy-producer.df
    container_name: dummy-producer
    depends_on:
      - "kafka"
 
 
  humidity-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/humidity-producer.df
    container_name: humidity-producer
    depends_on:
      - "kafka"
 
 
  pressure-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/pressure-producer.df
    container_name: pressure-producer
    depends_on:
      - "kafka"
   
   
  rain-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/rain-producer.df
    container_name: rain-producer
    depends_on:
      - "kafka"
  
  
  solar-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/solar-producer.df
    container_name: solar-producer
    depends_on:
      - "kafka"
  
  
  soil-temperature-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/soil-temperature-producer.df
    container_name: soil-temperature-producer
    depends_on:
      - "kafka"
  
  
  soil-water-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/soil-water-producer.df
    container_name: soil-water-producer
    depends_on:
      - "kafka"
  
  
  wind-producer:
    build: 
      context: .
      dockerfile: ./iot-sensor-producer/wind-producer.df
    container_name: wind-producer
    depends_on:
      - "kafka"

      
  dummy-consumer:
    build: 
      context: .
      dockerfile: ./iot-consumer/dummy-consumer.df
    container_name: dummy-consumer
    ports:
      - "8082:8080"
      - "8022:8020"
      - "50012:50010"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    depends_on:
      - "kafka"
      - "influx"
    
    
  consumer:
    build: 
      context: .
      dockerfile: ./iot-consumer/consumer.df
    container_name: consumer
    ports:
      - "8080:8080"
      - "8020:8020"
      - "50010:50010"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    depends_on:
      - "kafka"
      - "influx"
      

  spark-master-v2:
    build: 
      context: .
      dockerfile: ./prova.df
    container_name: spark-master-prova
    ports:
      - "8081:8080"
      - "8021:8020"
      - "50011:50010"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    depends_on:
      - "influx"
      

  influx:
    image: influxdb:1.8
    ports:
     - "8083:8083"
     - "8086:8086"
    environment:
     - INFLUXDB_USER=root
     - INFLUXDB_PASS=password
     - INFLUXDB_DB=pantheon
    volumes:
     - "./disk:/var/lib/influxdb"

